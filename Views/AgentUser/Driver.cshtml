@model SALEERP.ViewModel.AgentUserVM;
@{
    ViewBag.Title = "Manage Agent Type";
    if (this.ViewContext.FormContext == null)
    {
        this.ViewContext.FormContext = new FormContext();
    }
}


@using (Html.BeginForm("SaveDriver", "AgentUser"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Driver Details</h4>
        <hr />
        @Html.HiddenFor(model => model.AgentCode, new { htmlAttributes = new { @class = "form-control", required = "required", placeholder = "Enter ..." } })
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Panno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.Panno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Panno, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-sm-10">
                    @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4" style="width:100px;">Vehicle Type</label>
                <div class="col-sm-10">
                    <select asp-for="VehicleId" asp-items="Model.vdetails" required class="form-control">
                        <option value="">--Please select--</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.VehicleDetails[0].VehicleNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-sm-10">
                    @Html.TextAreaFor(model => model.VehicleDetails[0].VehicleNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VehicleDetails[0].VehicleNo, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div><a href="#" id="addNew" class="btn btn-info btn-flat">Add Contact</a></div>

        <table id="dataTable" border="0" cellpadding="0" cellspacing="0">
            <tr>
                <th>Mobile</th>
                <th>Email</th>
                <th></th>
            </tr>
            @*@if (Model != null && Model.AgentContact.Count() > 0)
            {
                int j = 0;
                foreach (var i in Model.AgentContact.ToList())
                {*@
            <tr style="border:1px solid black">
                @*<td>@Html.TextBoxFor(model => model.AgentContact[j].Mobile)</td>
                <td>@Html.TextBoxFor(model => model.AgentContact[j].Email)</td>*@
                <td><input asp-for="AgentContact[0].Mobile" class="input100" placeholder="Mobile" required autofocus></td>
                <td><input asp-for="AgentContact[0].Email" class="input100" placeholder="email" required autofocus></td>
                <td>
                    @*@if (j > 0)
                    {*@
                    <a href="#" id="arm" onclick="Deleteqry(this)" class="remove">Remove</a>
                    @*  }*@
                </td>
            </tr>
            @*j++;
                }
            }*@
        </table>
        <div style="display:flex;float:right"><a href="#" id="addNewbank" class="btn btn-info btn-flat">Bank Details</a></div>
        <table id="dataTablebank" border="0" cellpadding="0" cellspacing="0">
            <tr>
                <th>Bank</th>
                <th>Account</th>
                <th></th>
            </tr>
            @*@if (Model != null && Model.AgentContact.Count() > 0)
            {
                int j = 0;
                foreach (var i in Model.AgentContact.ToList())
                {*@
            <tr style="border:1px solid black">
                @*<td>@Html.TextBoxFor(model => model.AgentContact[j].Mobile)</td>
                <td>@Html.TextBoxFor(model => model.AgentContact[j].Email)</td>*@
                <td>
                    <select asp-for="BankDetails[0].BankId" asp-items="Model.bdetails" required class="form-control">
                        <option value="">--Please select--</option>
                    </select>


                </td>
                <td><input asp-for="BankDetails[0].AccountNo" class="input100" placeholder="Account No" required autofocus></td>
                <td>
                    @*@if (j > 0)
                    {*@
                    <a href="#" id="arm" onclick="Deleteqry(this)" class="remove">Remove</a>
                    @*  }*@
                </td>
            </tr>
            @*j++;
                }
            }*@
        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="align-content:center;">
                <input id="submit" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>


        <script>
            $("#submit").click(function () {
                var form = $("form")
                    .removeData("validator") /* added by the raw jquery.validate plugin */
                    .removeData("unobtrusiveValidation");  /* added by the jquery unobtrusive plugin*/

                $.validator.unobtrusive.parse(form);

                form.data('unobtrusiveValidation');
            });


        </script>
        <script language="javascript">
            $(document).ready(function () {
                $("#dataTable").hide();
                $("#dataTablebank").hide();
                //1. Add new row
                $("#addNew").click(function (e) {
                    var markup;
                    e.preventDefault();
                    $("#dataTable").show();
                  //  $("#dataTablebank").show();
                    debugger;
                    var $tableBody = $("#dataTable");
                    var $trLast = $tableBody.find("tr:last");

                    var $trNew;

                    var suffix = $trLast.find(':input:first').attr('name');
                    debugger;
                    if (typeof (suffix) != "undefined") {

                        $trNew = $trLast.clone();
                    }
                    else {

                        $trNew = "<tr style='border:1px solid black'><td><input class='input100' placeholder='UserName' id='AgentContact_0_Mobile' name='AgentContact[0].Mobile' type='text'/></td><td><input class='input100' placeholder='UserEmail' id='AgentContact_0_Email'  name='AgentContact[0].Email' type='text'/></td><td><a href='#' onclick='Deleteqry(this)' class='remove'>Remove</a></td></tr>";
                        $trLast.after($trNew);
                    }

                    var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
                    $trNew.find("td:last").html('<a href="#" onclick="Deleteqry(this)" class="remove">Remove</a>');
                    $.each($trNew.find(':input'), function (i, val) {
                        // Replaced Name
                        var oldN = $(this).attr('name');
                        var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                        $(this).attr('name', newN);
                        //Replaced value
                        var type = $(this).attr('type');
                        if (type.toLowerCase() == "text") {
                            $(this).attr('value', '');
                        }

                        // If you have another Type then replace with default value
                        $(this).removeClass("input-validation-error");

                    });
                    $trLast.after($trNew);

                    //  Re-assign Validation
                    //var form = $("form")
                    //    .removeData("validator")
                    //    .removeData("unobtrusiveValidation");
                    //$.validator.unobtrusive.parse(form);
                });

                // 2. Bank Details
                  $("#addNewbank").click(function (e) {
                    var markup;
                    e.preventDefault();
                    $("#dataTablebank").show();
                  //  $("#dataTablebank").show();
                    debugger;
                    var $tableBody = $("#dataTablebank");
                    var $trLast = $tableBody.find("tr:last");

                    var $trNew;

                    var suffix = $trLast.find(':input:first').attr('name');
                    debugger;
                    if (typeof (suffix) != "undefined") {

                        $trNew = $trLast.clone();
                    }
                    else {

                        $trNew = "<tr style='border:1px solid black'><td><input class='input100' placeholder='UserName' id='AgentContact_0_Mobile' name='AgentContact[0].Mobile' type='text'/></td><td><input class='input100' placeholder='UserEmail' id='AgentContact_0_Email'  name='AgentContact[0].Email' type='text'/></td><td><a href='#' onclick='Deleteqry(this)' class='remove'>Remove</a></td></tr>";
                        $trLast.after($trNew);
                    }

                    var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
                    $trNew.find("td:last").html('<a href="#" onclick="Deleteqry(this)" class="remove">Remove</a>');
                    $.each($trNew.find(':input,select'), function (i, val) {
                        // Replaced Name
                        var oldN = $(this).attr('name');
                        var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                        $(this).attr('name', newN);
                        //Replaced value
                        debugger;
                        var type = $(this).attr('type');
                        if (typeof (type) != "undefined") {
                            if (type.toLowerCase() == "text") {
                                $(this).attr('value', '');
                            }
                           
                        }
                        // If you have another Type then replace with default value
                        $(this).removeClass("input-validation-error");

                    });
                    $trLast.after($trNew);

                    //  Re-assign Validation
                    //var form = $("form")
                    //    .removeData("validator")
                    //    .removeData("unobtrusiveValidation");
                    //$.validator.unobtrusive.parse(form);
                });


            });
            function Deleteqry(_this) {
                if (confirm("Are you sure you want to delete this Row?") == true)
                    $(_this).closest('tr').remove();
                return false;
            }
        </script>
