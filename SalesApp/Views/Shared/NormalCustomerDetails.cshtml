@model SalesApp.ViewModel.NormalSaleVM;

@{
    ViewBag.Title = "Add Customer Info";

}
   
            <div class="main-container-cus">
                <div class="container-bg clearfix">
                    @using (Html.BeginForm("AddCustomerInfo", "AddSale", FormMethod.Post, new { id = "customerinfo", onsubmit = "showLoader(this);" }))
                    {
                        @Html.AntiForgeryToken()

                    <div class="container-fluid customer-info-form">
                        @if (TempData["CustomerUserMessage"] != null)
                        {
                            var message = (SalesApp.ViewModel.MessageVM)TempData["CustomerUserMessage"];
                            <div style="color:red">
                                <strong>@message.title</strong>
                                @message.msg
                            </div>
                        }

                        <div class="row pad-rl-10 pad-tb-10">
                            <div class="col-lg-6 col-md-6 col-sm-8">
                                <div class="form-group">
                                    <label for="">Full Name</label>
                                    <div class="row">
                                        <div class="col-lg-3 col-md-3 col-sm-4 col-xs-12 col-12 pad-r-0">
                                            <div class="full-name-init" style="margin-left:-30px">
                                                <label class="container-init">
                                                    Mr.
                                                    @Html.RadioButtonFor(model => model._titletype, TitleType.Mr, new { @name = "radio", @type = "radio", @id = "Mr" })
                                                    <span class="checkmark"></span>
                                                </label>
                                                <label class="container-init">
                                                    Ms.
                                                    @Html.RadioButtonFor(model => model._titletype, TitleType.Ms, new { @name = "radio", @type = "radio", @id = "Ms" })
                                                    <span class="checkmark"></span>
                                                </label>
                                            </div>

                                        </div>
                                        <div class="col-lg-9 col-md-9 col-sm-8 col-xs-12 col-12" style="margin-left:-21px">
                                            @Html.TextBoxFor(model => model.cinfo.Name, new { type = "string", @class = "form-control", @style = "text-transform: capitalize;width:126%", htmlAttributes = new { required = "required", placeholder = "Enter ..." } })
                                            @Html.ValidationMessageFor(model => model.cinfo.Name, "", new { @class = "text-danger" })

                                        </div>
                                    </div>

                                </div>
                            </div>

                            <div class="col-lg-6 col-md-6 col-sm-4 form-group">
                                <label for="">Nationality</label>
                                @Html.DropDownListFor(model => model.nationalityid, Model.nationalitydetails as IEnumerable<SelectListItem>, "Select", new { onchange = "national_SelectedIndexChanged()", @class = "form-control", htmlAttributes = new { required = "required" } })
                                @Html.ValidationMessageFor(model => model.nationalityid, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row pad-rl-10 pad-tb-10 bg-light-pink">
                            <!-- <div class="col-lg-12">
          <h4>Address Information</h4>
        </div> -->
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <div class="form-group">
                                    <label for="">House No./Street Name</label>
                                    @Html.TextAreaFor(model => model.cinfo.Address, new { @class = "form-control", @style = "text-transform: capitalize", @rows = 3, htmlAttributes = new { required = "required", placeholder = "Enter ..." } })
                                    @Html.ValidationMessageFor(model => model.cinfo.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <d[0]iv class="col-lg-3 col-md-3 col-sm-6">
                                <div class="form-group">
                                    <label for="">Country</label>
                                    @Html.DropDownListFor(model => model.countryid, Model.countrydetails as IEnumerable<SelectListItem>, "Select", new { onchange = "country_SelectedIndexChanged()", @class = "form-control", htmlAttributes = new { required = "required" } })
                                    @Html.ValidationMessageFor(model => model.countryid, "", new { @class = "text-danger" })
                                </div>
                            </d[0]iv>
                            <div class="col-lg-3 col-md-3 col-sm-6">
                                <div class="form-group">
                                    <label for="">State</label>
                                    @Html.TextBoxFor(model => model.cinfo.State, new { @class = "form-control", htmlAttributes = new { required = "required", placeholder = "Enter ..." } })
                                    @Html.ValidationMessageFor(model => model.cinfo.State, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-2 col-md-4 col-sm-6">
                                <div class="form-group">
                                    <label for="">City</label>
                                    @Html.TextBoxFor(model => model.cinfo.City, new { @class = "form-control", htmlAttributes = new { required = "required", placeholder = "Enter ..." } })
                                    @Html.ValidationMessageFor(model => model.cinfo.City, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-lg-2 col-md-4 col-sm-6">
                                <div class="form-group">
                                    <label for="">Zip Code</label>
                                    @Html.TextBoxFor(model => model.cinfo.Zipcode, new { @class = "form-control", @style = "text-transform: uppercase", htmlAttributes = new { required = "required", placeholder = "Enter ..." } })
                                    @Html.ValidationMessageFor(model => model.cinfo.Zipcode, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </div>


                        <div class="row pad-rl-10 pad-tb-10 bg-light-pink mar-t-10">
                            <!-- <div class="col-lg-12">
          <h4>Contact Information</h4>
        </div> -->
                            <div class="col-lg-3 col-md-3 col-sm-6">
                                <div class="form-group">
                                    <label for="">Tel.No.</label>
                                    <div class="row">
                                        <div class="col-lg-3 col-md-3 col-sm-4 col-xs-4 col-4 pad-r-0">
                                            @Html.TextBoxFor(model => model.cinfo.TeleCountryCode, new { @class = "form-control", htmlAttributes = new { required = "required", placeholder = "+" } })
                                            @Html.ValidationMessageFor(model => model.cinfo.TeleCountryCode, "", new { @class = "text-danger" })

                                        </div>
                                        <div class="col-lg-9 col-md-9 col-sm-8 col-xs-8 col-8">
                                            @Html.TextBoxFor(model => model.cinfo.Telephone, new { type = "number", maxlength = "10", @class = "form-control", htmlAttributes = new { required = "required", placeholder = "+" } })
                                            @Html.ValidationMessageFor(model => model.cinfo.Telephone, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-3 col-sm-6">
                                <div class="form-group">
                                    <label for="">Mobile No.</label>
                                    <div class="row">
                                        <div class="col-lg-3 col-md-3 col-sm-4 col-xs-4 col-4 pad-r-0">
                                            @Html.TextBoxFor(model => model.cinfo.MobCountryCode, new { @class = "form-control", htmlAttributes = new { required = "required", placeholder = "+1" } })
                                            @Html.ValidationMessageFor(model => model.cinfo.MobCountryCode, "", new { @class = "text-danger" })

                                        </div>
                                        <div class="col-lg-9 col-md-9 col-sm-8 col-xs-8 col-8">
                                            @Html.TextBoxFor(model => model.cinfo.Mobile, new { type = "number", @class = "form-control", htmlAttributes = new { required = "required", placeholder = "+1" } })
                                            @Html.ValidationMessageFor(model => model.cinfo.Mobile, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-12">
                                <div class="form-group">
                                    <label for="">Email</label>
                                    <div class="email-input">
                                        @Html.TextBoxFor(model => model.cinfo.Email, new { @class = "form-control", @style = "text-transform: lowercase", htmlAttributes = new { placeholder = "" } })
                                        @Html.ValidationMessageFor(model => model.cinfo.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                        </div>

                        <input type="hidden" asp-for="orderid" />
                        <input type="hidden" asp-for="billid" />

                        <!-- <div class="row">
       <div class="info-form-header">
            <h3><i class="las la-truck"></i>Delivery Information</h3>
          </div>
    </div> -->


                    </div>




                        <div class="row pad-rl-10 pad-tb-10">
                            <span style="color:red;font-size:large;font-family:Arial;" id="lblmsg"></span>
                            <div class="col-lg-12 col-md-12 col-sm-12 text-right pad-rl-20 btns-group">

                                <button type="button" class="btn-dark-gray" onclick="manaagetab('4')">Back</button>
                                @*<button type="button" class="btn-blue-light">Reset</button>*@
                                <button  id="custsubmit" class="btn-pink">Continue</button>
                                @*<button type="button" class="btn-pink" onclick="manaagetab('3')">Continue</button>*@

                            </div>
                        </div>
                    }

                </div>
            </div>
            <div class="overlay"></div>
            <script type="text/javascript">
                $(document).ready(function () {
                    $('#custsubmit').click(function () {

                     
                        var inputmob = $('#cinfo_Mobile').val();
                        var inputTel = $('#cinfo_Telephone').val();
                        var inputEmail = $('#cinfo_Email').val();
                        if ($('#cinfo_Name').val() == '') {
                            $('#lblmsg').text('Please Enter Customer Name.');
                            $('#cinfo_Name').focus();
                            // alert('Please Enter Customer Name.');
                            return false;

                        }
                        if (inputmob != '') {
                            if (phonenumber(inputmob) == false) {
                                $('#lblmsg').text('Please enter 10 digit valid mobile no.');
                                $('#cinfo_Mobile').focus();
                                //  alert("Please enter 10 digit valid mobile no.");
                                //  $('#cinfo_Mobile').focus();
                                return false;

                            }
                        }
                        if (inputTel != '') {
                            if (phonenumber(inputTel) == false) {
                                $('#lblmsg').text('Please enter 10 digit valid Telephone no.');
                                $('#cinfo_Mobile').focus();
                                //alert("Please enter 10 digit valid Telephone no.");
                                //$('#cinfo_Telephone').focus();
                                return false;
                            }
                        }
                        if (inputEmail != '') {

                            //if (IsEmail(inputEmail) == false) {
                            //    $('#lblmsg').text('Invalid Email.');
                            //    //   alert("Invalid Email.");
                            //    $('#cinfo_Email').focus();
                            //    return false;
                            //}
                            $('#customerinfo').submit();
                        }
                        else { $('#customerinfo').submit(); }


                    });
                
                });

                function isvalid() {
                    var inputmob = $('#cinfo_Mobile').val();
                    var inputTel = $('#cinfo_Telephone').val();
                    var inputEmail = $('#cinfo_Email').val();
                    debugger;
                        if (phonenumber(inputmob) == false) {

                            alert("Please enter 10 digit valid mobile no.");
                            $('#cinfo_Mobile').focus();
                            return false;

                        }
                        else if (phonenumber(inputTel) == false) {

                            alert("Please enter 10 digit valid Telephone no.");
                            $('#cinfo_Telephone').focus();
                            return false;

                    }
                   

                         if (validateEmail(inputEmail) == false) {

                              alert('Invalid Email');
                            $('#cinfo_Email').focus();
                            return false;

                        }
                       


                   
                }
                function phonenumber(inputtxt) {
                    var phoneno = /^\d{10}$/;
                    if ((inputtxt.match(phoneno))) {
                        return true;

                    }
                    else {
                       // alert("Please enter 10 digit valid phone/mobile no.");
                        
                        return false;
                       
                    }
                }
                function national_SelectedIndexChanged() {
                    $('#cinfo_Address').focus();
                }
                function country_SelectedIndexChanged() {
                    $('#cinfo_State').focus();
                    Gettelecode();
                }
                   function Gettelecode() {
                       var countryid = $('#countryid').val();
                       if (countryid != '') {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetTeleCodeDetails", "AddSale")',
                //contentType: false,
                //processData: false,
                data: { "countryid": countryid },
                success: function (data) {
                    if (data != null) {
                        debugger;
                        var response = JSON.stringify(data);
                        if (response != null) {
                           
                            $('#cinfo_MobCountryCode').val(data);
                            $('#cinfo_TeleCountryCode').val(data); 
                        }
                        else {
                           
                        }
                    }
                    else {
                       
                    }



                },
                Error: function (err) {
                    $('#itemcategory').append(err);
                    //  debugger;
                },
                /* beforeSend: function () {
                     $(".progress").show();
                 },
                 complete: function () {
                    $(".progress").hide();
                 }*/
            });

        }
    }

            </script>