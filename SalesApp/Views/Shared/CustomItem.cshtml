@model SalesApp.ViewModel.CustomSaleVM;

@{
    ViewBag.Title = "Add Custom Item";

}
    <div class="container-fluid">
        <div class="row pad-t-10">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12">
                <h2 class="head-main">Add Custom Item</h2>
            </div>

        </div>


        @using (Html.BeginForm("AddCustomSale", "CustomSale", FormMethod.Post, new { enctype = "multipart/form-data" })) {
            @Html.AntiForgeryToken()


    <div class="row pad-rl-20 pad-tb-10">
        <input type="hidden" asp-for="mirrorid" />
        
        <div class="col-lg-12 col-md-12 full-width-col pad-0">
            <div class="container-fluid pad-0">
                <div class="row">

                    <!--  <div class="col-lg-12 hide-desktop text-right">
                  <div class="scanner-image">
                    <img src="img/scan.png"/>
                  </div>
                </div> -->
                    <div class="col-lg-4 col-md-4 col-sm-4">
                        <div>
                            <div class=" main-photo-container">
                                <img id="image" class="object-cover w-full h-32" src="https://placehold.co/300x300/e2e8f0/e2e8f0" />

                                <div class="photo-bg" onClick="document.getElementById('fileInput').click()">
                                    <button type="button"
                                            style="background-color: rgba(255, 255, 255, 0.65)"
                                            class="hover:bg-gray-100 text-gray-700 font-semibold py-2 px-4 text-sm border border-gray-300 rounded-lg shadow-sm">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-camera" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                            <rect x="0" y="0" width="24" height="24" stroke="none"></rect>
                                            <path d="M5 7h1a2 2 0 0 0 2 -2a1 1 0 0 1 1 -1h6a1 1 0 0 1 1 1a2 2 0 0 0 2 2h1a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-9a2 2 0 0 1 2 -2" />
                                            <circle cx="12" cy="13" r="3" />
                                        </svg>
                                    </button>
                                </div>
                            </div>
                            <input name="file" id="fileInput" accept="image/*" class="hidden" type="file" onChange="let file = this.files[0];
          var reader = new FileReader();

          reader.onload = function (e) {
            document.getElementById('image').src = e.target.result;
            document.getElementById('image2').src = e.target.result;
          };

          reader.readAsDataURL(file);
        ">
                        </div>

                    </div>
                    <div class="col-lg-8 col-md-8 col-sm-8">
                        <div class="row mar-b-10">
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label for="inputState">Category</label>
                                    @Html.DropDownListFor(model => model.categoryid, Model.categorydetails as IEnumerable<SelectListItem>, "Select", htmlAttributes: new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.categoryid, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label for="inputState">Shape</label>
                                    @Html.DropDownListFor(model => model.shapeid, Model.shapesdetails as IEnumerable<SelectListItem>, "Select", htmlAttributes: new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.shapeid, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label for="inputState">Size</label>
                                    <input type="text" asp-for="size" class="form-control">
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label for="inputState">Marble Colour</label>
                                    @Html.DropDownListFor(model => model.marblecolor, Model.marblecolordetails as IEnumerable<SelectListItem>, "Select", htmlAttributes: new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.marblecolor, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                @*<div class="row ">
                    <div class="col-lg-12 col-md-12 col-sm-12">
                        <div class="description-container desktop-description">

                            <ul>
                                <li class="mar-r-5"><p class="pad-r-0"><span class="product-name fbold"><label asp-for="cashsaledetails[0].category"></label> </span><span class="divide">/</span><span class="fbold"><label asp-for="cashsaledetails[0].size"></label> </span><span class="divide">/</span><span class="fbold"><label asp-for="cashsaledetails[0].shape"></label> </span><span class="divide">/</span><span class="fbold"><label asp-for="cashsaledetails[0].color"></label> </span></p></li>


                            </ul>
                        </div>
                    </div>
                </div>*@




                <!-- <div class="row mar-b-10">
              <div class="col-lg-6 addition-add-new clearfix">
                <label for="add" class="lable-head">Add</label>
                <div class="addition-add-input">
                  <div class="inputGroup">
                    <input id="option1" name="option1" type="checkbox"/>
                    <label for="option1">LED</label>
                  </div>
                  <div class="inputGroup">
                  <input id="option2" name="option2" type="checkbox"/>
                  <label for="option2">Wooden Frame</label>
                  </div>
                  <div class="inputGroup">
                    <input id="option3" name="option3" type="checkbox"/>
                    <label for="option3">Marble Cubes</label>
                  </div>
                  <div class="inputGroup">
                    <input id="option4" name="option3" type="checkbox"/>
                    <label for="option4">Addition</label>
                  </div>
                </div>
              </div>

            </div> -->
                <div class="row mar-b-10">
                    <div class="form-group col-lg-3 col-md-3 col-sm-3 col-xs-6 col-6">
                        <label for="inputState">Fx</label>
                        @Html.DropDownListFor(model => model.currencyid, Model.currencydetails as IEnumerable<SelectListItem>, "Select", htmlAttributes: new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.currencyid, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group col-lg-3 col-md-3 col-sm-3 col-xs-6 col-6">
                        @*<label for="ConversionRate">Conv. Rate</label>*@
                        @Html.LabelFor(model => model.conversionrate)
                        @Html.TextBoxFor(model => model.conversionrate, new { type = "number", min = "0", step = "0.1", @class = "form-control", required = "required", placeholder = "Enter ..." })
                        @Html.ValidationMessageFor(model => model.conversionrate, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-lg-3 col-md-3 col-sm-4 col-xs-6 col-6">
                        @*<input asp-for="conversionrate" type="number" min="0" step="0.1" required placeholder="Enter....." />*@
                        @Html.LabelFor(model => model.totalvalue)
                        @Html.TextBoxFor(model => model.totalvalue, new { type = "number", min = "0", step = "1", @class = "form-control", required = "required", placeholder = "Enter ..." })
                        @Html.ValidationMessageFor(model => model.totalvalue, "", new { @class = "text-danger" })

                        <input type="hidden" id="hdntotal" value="@Model.totalvalue" />
                        <input type="hidden" asp-for="orderid" />

                    </div>

                    <div class="col-lg-3 text-right col-md-3 col-sm-2 col-xs-6 col-6">
                        <button class="btn-blue">Add</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
         }
        
        <div class="row pad-t-0 pad-rl-20">
            <div class="col-lg-12 pad-0">
                <div class="table-responsive table--no-card m-b-30">
                    <table class="table table-borderless table-striped table-earning">
                        <thead>
                            <tr>
                                <th>Description</th>
                                <th>Fx</th>
                                <th>INR</th>
                                <th class="text-center">Action</th>

                            </tr>
                        </thead>
                        <tbody>



                            @if (Model.cashsaledetails != null)
                                @if (Model.cashsaledetails.Count() > 0)
                                {
                                    @foreach (var item in Model.cashsaledetails)
                                    {
                                        <tr>
                                            <td class="table-description-td">
                                                <p class="table-description-p">
                                                    @*<span class="table-stock-number">@Html.DisplayFor(modelItem => item.ordertype)</span>*@

                                                    @if (item.ordertype == "CM")
                                                    {
                                                        <span class="table-type CM">@Html.DisplayFor(modelItem => item.ordertype)</span>
                                                    }
                                                    else
                                                    { <span class="table-type of">@Html.DisplayFor(modelItem => item.ordertype)</span>}



                                                    @*<span class="table-type CM">@Html.DisplayFor(modelItem => item.ordertype)</span>*@
                                                </p>
                                                <p class="table-description">@Html.DisplayFor(modelItem => item.itemdesc)</p>
                                            </td>
                                            <td><i class="las la-rupee-sign"></i> @Html.DisplayFor(modelItem => item.salevalue)</td>
                                            <td><i class="las la-rupee-sign"></i> @Html.DisplayFor(modelItem => item.salevalueinr)</td>
                                            <td class="text-center">

                                                @Html.ActionLink("", "DeleteSale", "CustomSale", new { itemorderid = item.itemorderid }, new { @class = "delete-item  las la-times" })


                                            </td>
                                        </tr>
                                    }
                                }
                                
                        </table>
                    </div>
                </div>


                <div class="col-lg-12 text-right clearfix bg-pink">

                    <p class="grand-total"><span class="fregular head">Grand Total:</span><span class="fbold val"><i class="las la-rupee-sign"></i>  @Html.DisplayFor(model => model.grandtotal)</span></p>
                    <p class="info-txt"><!-- <i class="las la-info"></i>  -->Swipe Card Now !!</p>
                </div>



            </div>

            <div class="row pad-0 mar-0">
                <div class="col-lg-12 footer-btn text-right pad-rl-10">
                    <button class="btn-pink" onclick="manaagetab('4')">Continue</button>
                </div>
            </div>
        </div>