@model SALEERP.ViewModel.AgentUserVM;
@{
    ViewBag.Title = "Update Driver";
    if (this.ViewContext.FormContext == null)
    {
        this.ViewContext.FormContext = new FormContext();
    }
}


@using (Html.BeginForm("UpdateDriver", "AgentUser"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Update Demo Agent Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-4" style="width:100px;">Country</label>
            <div class="col-sm-10">
                <select asp-for="countryid" asp-items="Model.countrydetails" required class="form-control">
                    <option value="">--Please select--</option>
                </select>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Panno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Panno, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Panno, "", new { @class = "text-danger" })
            </div>
        </div>
        <div><a href="#" id="addNew" class="btn btn-info btn-flat">Add Contact</a></div>
        <table id="dataTable" border="0" cellpadding="0" cellspacing="0">

            @if (Model != null && Model.AgentContact != null && Model.BankDetails != null)
            {
                <tr>
                    <th>Mobile</th>
                    <th>Email</th>
                    <th></th>
                </tr>
                int j = 0;
                foreach (var i in Model.AgentContact.ToList())
                {
                    <tr style="border:1px solid black">

                        <td><input asp-for="AgentContact[j].Mobile" class="input100" placeholder="Mobile" required autofocus></td>
                        <td><input asp-for="AgentContact[j].Email" class="input100" placeholder="email" autofocus></td>
                        <td>
                            @if (j >= 0)
                            {
                                <a href="#" id="arm" onclick="Deleteqry(this)" class="remove">Remove</a>
                            }
                        </td>
                    </tr>
                    j++;
                }
            }
        </table>
        <div style="display:flex;float:right"><a href="#" id="addNewbank" class="btn btn-info btn-flat">Bank Details</a></div>
        <table id="dataTablebank" border="0" cellpadding="0" cellspacing="0">
            @if (Model != null && Model.BankDetails.Count() > 0)
            {

                <tr>
                    <th>Bank</th>
                    <th>Account</th>
                    <th></th>
                </tr>
                int j = 0;
                foreach (var i in Model.BankDetails.ToList())
                {
                    <tr style="border:1px solid black">
                        @*<td>@Html.TextBoxFor(model => model.AgentContact[j].Mobile)</td>
                        <td>@Html.TextBoxFor(model => model.AgentContact[j].Email)</td>*@
                        <td>
                            <select asp-for="BankDetails[j].BankId" asp-items="Model.bdetails" required class="form-control">
                                <option value="">--Please select--</option>
                            </select>


                        </td>
                        <td><input asp-for="BankDetails[j].AccountNo" class="input100" placeholder="Account No" required autofocus></td>
                        <td>
                            @if (j >= 0)
                            {
                                <a href="#" id="arm" onclick="Deleteqry(this)" class="remove">Remove</a>
                            }
                        </td>
                    </tr>
                    j++;
                }
            }
        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.HiddenFor(model => model.AgentId, new { htmlAttributes = new { @class = "form-control" } })
                <input id="submit" type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script>
    $("#submit").click(function () {
        var form = $("form")
            .removeData("validator") /* added by the raw jquery.validate plugin */
            .removeData("unobtrusiveValidation");  /* added by the jquery unobtrusive plugin*/

        $.validator.unobtrusive.parse(form);

        form.data('unobtrusiveValidation');
    });


</script>
<script language="javascript">
    $(document).ready(function () {

        //1. Add new row
        $("#addNew").click(function (e) {
            var markup;
            e.preventDefault();
            debugger;
            var $tableBody = $("#dataTable");
            var $trLast = $tableBody.find("tr:last");
           
            var $trNew;

              var suffix = $trLast.find(':input:first').attr('name');
            debugger;
            if (typeof (suffix) != "undefined") {

                 $trNew = $trLast.clone();
            }
            else {
              
                $trNew = "<tr style='border:1px solid black'><td><input class='input100' placeholder='Mobile' required id='AgentContact_0_Mobile' name='AgentContact[0].Mobile' type='text'/></td><td><input class='input100' placeholder='UserEmail' id='AgentContact_0_Email'  name='AgentContact[0].Email' type='text'/></td><td><a href='#' onclick='Deleteqry(this)' class='remove'>Remove</a></td></tr>";
                $trLast.after($trNew);
            }
           
                var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
                $trNew.find("td:last").html('<a href="#" onclick="Deleteqry(this)" class="remove">Remove</a>');
                $.each($trNew.find(':input'), function (i, val) {
                    // Replaced Name
                    var oldN = $(this).attr('name');
                    var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                    $(this).attr('name', newN);
                    //Replaced value
                    var type = $(this).attr('type');
                    if (type.toLowerCase() == "text") {
                        $(this).attr('value', '');
                    }

                    // If you have another Type then replace with default value
                    $(this).removeClass("input-validation-error");

                });
                $trLast.after($trNew);
            
           //  Re-assign Validation
            //var form = $("form")
            //    .removeData("validator")
            //    .removeData("unobtrusiveValidation");
            //$.validator.unobtrusive.parse(form);
        });

        // 2. Remove
         $("#addNewbank").click(function (e) {
                    var markup;
                    e.preventDefault();
                    $("#dataTablebank").show();
                  //  $("#dataTablebank").show();
                    debugger;
                    var $tableBody = $("#dataTablebank");
                    var $trLast = $tableBody.find("tr:last");

                    var $trNew;

                    var suffix = $trLast.find(':input:first').attr('name');
                    debugger;
                    if (typeof (suffix) != "undefined") {

                        $trNew = $trLast.clone();
                    }
                    else {

                        $trNew = "<tr style='border:1px solid black'><td><input class='input100' placeholder='UserName' id='AgentContact_0_Mobile' name='AgentContact[0].Mobile' type='text'/></td><td><input class='input100' placeholder='UserEmail' id='AgentContact_0_Email'  name='AgentContact[0].Email' type='text'/></td><td><a href='#' onclick='Deleteqry(this)' class='remove'>Remove</a></td></tr>";
                        $trLast.after($trNew);
                    }

                    var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
                    $trNew.find("td:last").html('<a href="#" onclick="Deleteqry(this)" class="remove">Remove</a>');
                    $.each($trNew.find(':input,select'), function (i, val) {
                        // Replaced Name
                        var oldN = $(this).attr('name');
                        var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                        $(this).attr('name', newN);
                        //Replaced value
                        debugger;
                        var type = $(this).attr('type');
                        if (typeof (type) != "undefined") {
                            if (type.toLowerCase() == "text") {
                                $(this).attr('value', '');
                            }
                           
                        }
                        // If you have another Type then replace with default value
                        $(this).removeClass("input-validation-error");

                    });
                    $trLast.after($trNew);

                    //  Re-assign Validation
                    //var form = $("form")
                    //    .removeData("validator")
                    //    .removeData("unobtrusiveValidation");
                    //$.validator.unobtrusive.parse(form);
                });

    });
     function Deleteqry(_this) {
            if (confirm("Are you sure you want to delete this Row?") == true)
                $(_this).closest('tr').remove();
            return false;
        }
</script>